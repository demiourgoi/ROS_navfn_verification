#!/bin/sh
#
# Generate Go code from the Dafny implementation of the NavFn planner
#
# The code generated by Dafny is slighly modified to insert the main function
# and compile everything. Moreover, the dafny.Real type is changed from
# rational numbers of arbitrary precision to the float32 type for efficiency.
#
# The script should be executed from the directory containing it.
#

./dafny /compileTarget:go /compile:0 /spillTargetCode:3 astar_navfnplanner.dfy

# Output directory for the generated files
GOSRC=astar_navfnplanner-go/src

# Adapt import statements
sed -i 's/_dafny "dafny"/_dafny "astar_navfnplanner\/dafny"/g' "$GOSRC/System_/System_.go"

sed -i 's/package astar_navfnplanner/package main/g' "$GOSRC/astar_navfnplanner.go"
sed -i 's/_dafny "dafny"/_dafny "astar_navfnplanner\/dafny"/g' "$GOSRC/astar_navfnplanner.go"
sed -i 's/_System "System_"/_System "astar_navfnplanner\/System_"/g' "$GOSRC/astar_navfnplanner.go"

# Define the function Sqrt that is used in the Dafny code
sed -i 's/import (/import (\n  "math"/g' "$GOSRC/astar_navfnplanner.go"

echo "func (_static *CompanionStruct_Default___) Sqrt(x _dafny.Real) _dafny.Real {
  return _dafny.RealOf(math.Sqrt(x.Float64()))
}" >> "$GOSRC/astar_navfnplanner.go"

# Define a conversion from dafny.Real to Float64
echo "func (x Real) Float64() float64 {
  fp, _ := x.impl.Float64()
  return fp
}" >> "$GOSRC/dafny/dafny.go"

# Change dafny.Real to float32
patch -i astar_navfnplanner-go/patch/realAsfloat32.patch -p 1

# Add code to nofify the intermediate state for white-box testing
# patch -i astar_navfnplanner-go/patch/notifyQueues.patch -p 1

cd "$GOSRC"
go build
