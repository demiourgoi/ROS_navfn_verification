Costmap

(6.0, 18.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 18], "goal": [6, 21], "length": 3, "path": [[6, 18], [6, 19], [6, 20], [6, 21]], "navfn}
(6.0, 22.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 22], "goal": [6, 8], "length": 14, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(2.0, 3.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [2, 3], "goal": [4, 16], "length": 14.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 19], "goal": [6, 13], "length": 6, "path": [[6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(1.0, 8.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 8], "goal": [4, 3], "length": 7.41421, "path": [[1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [6, 23], "goal": [6, 14], "length": 9, "path": [[6, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14]], "navfn}
(1.0, 7.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 3], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [4, 7], "goal": [3, 23], "length": 27.24264, "path": [[4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [1, 22], "goal": [1, 20], "length": 2, "path": [[1, 22], [1, 21], [1, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [4, 6], "goal": [3, 23], "length": 26.24264, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 3], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [1, 16], "goal": [6, 8], "length": 25.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 20], "goal": [6, 9], "length": 11, "path": [[6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9]], "navfn}
(4.0, 19.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [6, 10], "goal": [5, 23], "length": 13.41421, "path": [[6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23]], "navfn}
(6.0, 13.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [1, 17], "goal": [1, 19], "length": 2, "path": [[1, 17], [1, 18], [1, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 22], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [4, 12], "goal": [4, 3], "length": 9, "path": [[4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 19], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [6, 14], "goal": [1, 16], "length": 19.82843, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16]], "navfn}
(6.0, 10.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [6, 10], "goal": [1, 19], "length": 20.82843, "path": [[6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [4, 8], "goal": [1, 10], "length": 13.82843, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [1, 6], "goal": [1, 7], "length": 1, "path": [[1, 6], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [6, 17], "goal": [1, 10], "length": 22.82843, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [1, 6], "goal": [4, 21], "length": 22.82843, "path": [[1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 21], "goal": [2, 23], "length": 2.41421, "path": [[1, 21], [1, 22], [2, 23]], "navfn}
(4.0, 11.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [5, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [4, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [6, 21], "goal": [6, 22], "length": 1, "path": [[6, 21], [6, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [6, 13], "length": 19.82843, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(4.0, 15.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 17], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [1, 12], "goal": [4, 13], "length": 20.82843, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [1, 14], "goal": [5, 23], "length": 12.41421, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn}
(4.0, 8.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [4, 8], "goal": [4, 4], "length": 4, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [1, 21], "goal": [6, 13], "length": 15.82843, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(6.0, 21.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [6, 21], "goal": [1, 8], "length": 20.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 3], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0)
{"initial": [1, 15], "goal": [4, 12], "length": 22.82843, "path": [[1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 23], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 5], "goal": [4, 23], "length": 19.41421, "path": [[6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn}
(2.0, 1.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 1], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 19], "length": 14.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19]], "navfn}
(4.0, 20.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 20], "goal": [4, 9], "length": 11, "path": [[4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9]], "navfn}
(1.0, 8.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 8], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [1, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0)
{"initial": [1, 12], "goal": [1, 15], "length": 3, "path": [[1, 12], [1, 13], [1, 14], [1, 15]], "navfn}
(1.0, 15.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0)
{"initial": [1, 15], "goal": [4, 18], "length": 28.82843, "path": [[1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [2, 23], "goal": [1, 6], "length": 17.41421, "path": [[2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6]], "navfn}
(6.0, 23.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 23], "goal": [6, 13], "length": 10, "path": [[6, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(1.0, 19.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 19], "goal": [4, 3], "length": 18.41421, "path": [[1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 18], "goal": [6, 5], "length": 13, "path": [[6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn}
(3.0, 1.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [1, 18], "goal": [6, 19], "length": 12.82843, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 13], "goal": [4, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 14], "goal": [1, 22], "length": 8, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(1.0, 3.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [4, 4], "goal": [4, 23], "length": 25.24264, "path": [[4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 5], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 3], "goal": [4, 11], "length": 10.41421, "path": [[1, 3], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 4], "goal": [4, 7], "length": 3, "path": [[4, 4], [4, 5], [4, 6], [4, 7]], "navfn}
(4.0, 14.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 20], "length": 15.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(3.0, 21.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [1, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0)
{"initial": [5, 1], "goal": [3, 1], "length": 2, "path": [[5, 1], [4, 1], [3, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [4, 15], "goal": [4, 16], "length": 1, "path": [[4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 22], "goal": [2, 23], "length": 4.41421, "path": [[6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn}
(6.0, 7.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [1, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 17], "length": 18.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17]], "navfn}
(4.0, 4.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 4], "goal": [4, 9], "length": 5, "path": [[4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn}
(1.0, 10.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [1, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1600.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 7], "goal": [1, 14], "length": 16.82843, "path": [[4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [6, 19], "goal": [1, 10], "length": 20.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [1, 21], "goal": [5, 1], "length": 28.24264, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [3, 23], "goal": [6, 6], "length": 19.41421, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6]], "navfn}
(4.0, 21.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0)
{"initial": [4, 21], "goal": [4, 5], "length": 16, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [4, 6], "goal": [1, 13], "length": 14.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [1, 12], "goal": [4, 4], "length": 11.82843, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 15], "goal": [1, 21], "length": 6, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21]], "navfn}
(6.0, 20.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 20], "goal": [6, 21], "length": 1, "path": [[6, 20], [6, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,1.0,0.0} 0)
{"initial": [5, 1], "goal": [6, 1], "length": 1, "path": [[5, 1], [6, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [1, 14], "goal": [1, 20], "length": 6, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20]], "navfn}
(6.0, 18.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 23], "goal": [1, 21], "length": 2, "path": [[1, 23], [1, 22], [1, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 9], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 21], "goal": [4, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 3], "goal": [6, 17], "length": 14, "path": [[6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn}
(4.0, 12.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [1, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [4, 6], "goal": [1, 6], "length": 7.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [3, 23], "goal": [2, 1], "length": 27.82843, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [3, 3], "goal": [2, 23], "length": 21.82843, "path": [[3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [4, 3], "goal": [1, 16], "length": 15.41421, "path": [[4, 3], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0)
{"initial": [1, 20], "goal": [6, 3], "length": 26.82843, "path": [[1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 21], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0)
{"initial": [6, 1], "goal": [6, 3], "length": 2, "path": [[6, 1], [6, 2], [6, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [1, 15], "goal": [1, 18], "length": 3, "path": [[1, 15], [1, 16], [1, 17], [1, 18]], "navfn}
(2.0, 3.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [2, 3], "goal": [4, 9], "length": 7.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [6, 2], "goal": [6, 15], "length": 13, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [1, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [1, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [1, 6], "goal": [1, 17], "length": 11, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17]], "navfn}
(4.0, 17.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0)
{"initial": [4, 17], "goal": [4, 14], "length": 3, "path": [[4, 17], [4, 16], [4, 15], [4, 14]], "navfn}
(1.0, 6.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [1, 6], "goal": [4, 9], "length": 10.82843, "path": [[1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0)
{"initial": [1, 4], "goal": [4, 6], "length": 5.82843, "path": [[1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [1, 6], "goal": [4, 23], "length": 19.41421, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 8], "goal": [4, 1], "length": 8.41421, "path": [[6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 15], "goal": [6, 12], "length": 3, "path": [[6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(1.0, 12.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [1, 12], "goal": [6, 18], "length": 19.82843, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn}
(1.0, 7.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 7], "goal": [3, 3], "length": 5.41421, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 3], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 23], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [4, 23], "goal": [1, 3], "length": 22.41421, "path": [[4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 23], "goal": [3, 3], "length": 21.41421, "path": [[1, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 19], "length": 16.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19]], "navfn}
(4.0, 3.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 3], "goal": [1, 5], "length": 4.41421, "path": [[4, 3], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 21], "goal": [3, 23], "length": 3.41421, "path": [[1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(4.0, 8.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [1, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1600.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [6, 7], "goal": [1, 1], "length": 10.41421, "path": [[6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1350.0, 1400.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [1, 12], "goal": [6, 14], "length": 23.82843, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [2, 23], "goal": [1, 12], "length": 11.41421, "path": [[2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12]], "navfn}
(2.0, 3.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 3], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [1, 5], "goal": [4, 13], "length": 13.82843, "path": [[1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [4, 13], "goal": [1, 4], "length": 12.82843, "path": [[4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [1, 12], "goal": [1, 18], "length": 6, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18]], "navfn}
(1.0, 20.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [6, 14], "goal": [6, 19], "length": 5, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19]], "navfn}
(6.0, 21.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 21], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 5], "goal": [1, 21], "length": 16, "path": [[1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21]], "navfn}
(4.0, 3.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [4, 3], "goal": [1, 13], "length": 12.41421, "path": [[4, 3], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [1, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [1, 11], "goal": [4, 15], "length": 21.82843, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 2], "goal": [6, 8], "length": 6, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 16], "goal": [6, 8], "length": 8, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(6.0, 15.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 15], "goal": [6, 2], "length": 13, "path": [[6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 5], "goal": [6, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [1, 17], "goal": [1, 11], "length": 6, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11]], "navfn}
(1.0, 3.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [1, 3], "goal": [1, 4], "length": 1, "path": [[1, 3], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [5, 23], "goal": [1, 7], "length": 19.41421, "path": [[5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(6.0, 2.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [6, 2], "goal": [3, 23], "length": 23.41421, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [1, 18], "goal": [6, 10], "length": 21.82843, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [1, 12], "goal": [1, 7], "length": 5, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(1.0, 1.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 23], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 8], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 21], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [4, 6], "goal": [4, 11], "length": 5, "path": [[4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn}
(1.0, 8.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 8], "goal": [4, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [1, 1], "goal": [6, 7], "length": 10.41421, "path": [[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [1, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [1, 3], "goal": [4, 16], "length": 15.41421, "path": [[1, 3], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 17], "goal": [4, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [4, 8], "goal": [3, 23], "length": 28.24264, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 22], "goal": [6, 13], "length": 9, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(1.0, 6.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [1, 6], "goal": [2, 3], "length": 3.41421, "path": [[1, 6], [1, 5], [1, 4], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [1, 19], "goal": [6, 7], "length": 23.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [1, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0)
{"initial": [1, 10], "goal": [6, 11], "length": 28.82843, "path": [[1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [1, 20], "goal": [1, 7], "length": 13, "path": [[1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(1.0, 10.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [1, 10], "goal": [1, 7], "length": 3, "path": [[1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(1.0, 9.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 9], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [1, 23], "goal": [1, 4], "length": 19, "path": [[1, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [1, 19], "goal": [6, 13], "length": 17.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn}
(1.0, 8.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 8], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [6, 13], "goal": [6, 19], "length": 6, "path": [[6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19]], "navfn}
(6.0, 10.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 4], "goal": [6, 7], "length": 3, "path": [[6, 4], [6, 5], [6, 6], [6, 7]], "navfn}
(1.0, 11.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [1, 11], "goal": [4, 17], "length": 23.82843, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [6, 10], "goal": [1, 18], "length": 21.82843, "path": [[6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [1, 9], "goal": [4, 23], "length": 16.41421, "path": [[1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn}
(1.0, 8.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0)
{"initial": [1, 8], "goal": [4, 14], "length": 17.82843, "path": [[1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [4, 15], "goal": [4, 19], "length": 4, "path": [[4, 15], [4, 16], [4, 17], [4, 18], [4, 19]], "navfn}
(1.0, 16.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 15], "length": 18.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 22], "goal": [4, 23], "length": 2.41421, "path": [[6, 22], [5, 23], [4, 23]], "navfn}
(4.0, 10.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 10], "goal": [4, 9], "length": 1, "path": [[4, 10], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 14], "goal": [2, 23], "length": 12.41421, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn}
(5.0, 1.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [5, 1], "goal": [6, 21], "length": 20.41421, "path": [[5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0)
{"initial": [2, 3], "goal": [4, 6], "length": 4.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 11], "goal": [3, 23], "length": 13.41421, "path": [[1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(6.0, 8.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [1, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [1, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 14], "goal": [4, 10], "length": 4, "path": [[4, 14], [4, 13], [4, 12], [4, 11], [4, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [4, 20], "goal": [1, 3], "length": 19.41421, "path": [[4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [6, 21], "goal": [3, 3], "length": 27.24264, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 9], "goal": [4, 7], "length": 2, "path": [[4, 9], [4, 8], [4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [1, 12], "goal": [1, 16], "length": 4, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16]], "navfn}
(6.0, 17.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [6, 17], "goal": [1, 23], "length": 10.41421, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [2, 3], "goal": [5, 23], "length": 23.82843, "path": [[2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [6, 18], "goal": [1, 9], "length": 22.82843, "path": [[6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [1, 6], "goal": [1, 11], "length": 5, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11]], "navfn}
(4.0, 5.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [4, 5], "goal": [3, 23], "length": 25.24264, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 22], "goal": [6, 7], "length": 15, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn}
(4.0, 20.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [4, 20], "goal": [4, 8], "length": 12, "path": [[4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8]], "navfn}
(6.0, 9.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [5, 23], "length": 9.41421, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn}
(4.0, 14.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 21], "length": 17, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21]], "navfn}
(4.0, 14.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [4, 14], "goal": [1, 3], "length": 13.41421, "path": [[4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [6, 13], "goal": [1, 16], "length": 20.82843, "path": [[6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 17], "goal": [6, 7], "length": 10, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn}
(1.0, 17.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [1, 17], "goal": [6, 17], "length": 15.82843, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17]], "navfn}
(5.0, 1.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1200.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [1, 22], "goal": [1, 18], "length": 4, "path": [[1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn}
(4.0, 1.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [4, 1], "goal": [5, 23], "length": 23.82843, "path": [[4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [6, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [1, 19], "goal": [1, 20], "length": 1, "path": [[1, 19], [1, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.3e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 23], "length": 16, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23]], "navfn}
(1.0, 13.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [1, 13], "goal": [6, 19], "length": 17.82843, "path": [[1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19]], "navfn}
(6.0, 19.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 19], "goal": [4, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 7], "goal": [2, 23], "length": 16.41421, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 23], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 17], "goal": [1, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [1, 15], "goal": [6, 18], "length": 16.82843, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn}
(3.0, 1.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [4, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 3], "goal": [2, 23], "length": 20.41421, "path": [[1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {2.0,3.0,0.0} 0
{"initial": [2, 3], "goal": [2, 3], "length": 0, "path": [[2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 2], "goal": [6, 21], "length": 19, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [4, 6], "goal": [2, 3], "length": 4.41421, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 7], "goal": [3, 23], "length": 17.41421, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(5.0, 1.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [4, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 6], "goal": [2, 23], "length": 17.41421, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(2.0, 23.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [2, 23], "goal": [1, 4], "length": 19.41421, "path": [[2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [4, 3], "goal": [1, 3], "length": 3, "path": [[4, 3], [3, 3], [2, 3], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [6, 13], "goal": [1, 1], "length": 16.41421, "path": [[6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [1, 9], "goal": [1, 12], "length": 3, "path": [[1, 9], [1, 10], [1, 11], [1, 12]], "navfn}
(1.0, 18.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 18], "goal": [4, 11], "length": 24.82843, "path": [[1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0)
{"initial": [4, 15], "goal": [4, 18], "length": 3, "path": [[4, 15], [4, 16], [4, 17], [4, 18]], "navfn}
(1.0, 18.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [1, 18], "goal": [1, 11], "length": 7, "path": [[1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11]], "navfn}
(5.0, 1.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [5, 1], "goal": [6, 2], "length": 1.41421, "path": [[5, 1], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [1, 15], "goal": [4, 19], "length": 29.82843, "path": [[1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [6, 23], "goal": [4, 3], "length": 26.82843, "path": [[6, 23], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 23], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [6, 20], "goal": [1, 10], "length": 19.82843, "path": [[6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [4, 20], "goal": [4, 13], "length": 7, "path": [[4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13]], "navfn}
(6.0, 10.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [6, 10], "goal": [6, 14], "length": 4, "path": [[6, 10], [6, 11], [6, 12], [6, 13], [6, 14]], "navfn}
(3.0, 3.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [3, 3], "goal": [4, 9], "length": 6.41421, "path": [[3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 13], "length": 22.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 10], "length": 3, "path": [[6, 7], [6, 8], [6, 9], [6, 10]], "navfn}
(1.0, 6.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 6], "goal": [3, 3], "length": 4.41421, "path": [[1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [4, 4], "goal": [4, 8], "length": 4, "path": [[4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "navfn}
(1.0, 15.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [1, 15], "goal": [6, 7], "length": 27.82843, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [1, 16], "goal": [4, 10], "length": 21.82843, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [4, 17], "goal": [4, 3], "length": 14, "path": [[4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [4, 6], "goal": [1, 20], "length": 21.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [4, 19], "goal": [4, 15], "length": 4, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [2, 1], "goal": [6, 20], "length": 22.41421, "path": [[2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [6, 4], "goal": [1, 23], "length": 23.41421, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {6.0,2.3e+1,0.0} 0
{"initial": [6, 23], "goal": [6, 23], "length": 0, "path": [[6, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 4], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.1e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [3, 21], "goal": [4, 21], "length": 1, "path": [[3, 21], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [1, 20], "goal": [1, 16], "length": 4, "path": [[1, 20], [1, 19], [1, 18], [1, 17], [1, 16]], "navfn}
(6.0, 2.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 2], "goal": [6, 7], "length": 5, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 13], "goal": [6, 7], "length": 6, "path": [[6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn}
(4.0, 21.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [1, 17], "goal": [1, 4], "length": 13, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 19], "goal": [4, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 20], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 13], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [6, 22], "goal": [6, 19], "length": 3, "path": [[6, 22], [6, 21], [6, 20], [6, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [1, 13], "goal": [5, 23], "length": 13.41421, "path": [[1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [6, 13], "goal": [6, 4], "length": 9, "path": [[6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0)
{"initial": [6, 17], "goal": [6, 11], "length": 6, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11]], "navfn}
(6.0, 12.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [1, 17], "goal": [6, 21], "length": 11.82843, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21]], "navfn}
(1.0, 12.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [1, 12], "goal": [4, 17], "length": 24.82843, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0)
{"initial": [3, 3], "goal": [4, 6], "length": 3.41421, "path": [[3, 3], [4, 4], [4, 5], [4, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [1, 19], "goal": [6, 2], "length": 28.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 15], "goal": [4, 9], "length": 6, "path": [[4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9]], "navfn}
(6.0, 20.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 20], "goal": [4, 23], "length": 4.41421, "path": [[6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn}
(4.0, 10.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [4, 10], "goal": [1, 9], "length": 14.82843, "path": [[4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [4, 17], "goal": [4, 19], "length": 2, "path": [[4, 17], [4, 18], [4, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [1, 9], "goal": [4, 10], "length": 14.82843, "path": [[1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 3], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [4, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [1, 22], "goal": [1, 6], "length": 16, "path": [[1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [1, 13], "goal": [4, 17], "length": 25.82843, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 16], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [1, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [6, 21], "goal": [1, 19], "length": 9.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19]], "navfn}
(1.0, 7.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 7], "goal": [1, 22], "length": 15, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(6.0, 13.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [6, 13], "goal": [6, 6], "length": 7, "path": [[6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6]], "navfn}
(4.0, 10.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 10], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [3, 3], "goal": [1, 5], "length": 3.41421, "path": [[3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [3, 3], "goal": [1, 22], "length": 20.41421, "path": [[3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [4, 23], "goal": [1, 18], "length": 7.41421, "path": [[4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [1, 11], "goal": [6, 16], "length": 22.82843, "path": [[1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0)
{"initial": [4, 19], "goal": [4, 14], "length": 5, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14]], "navfn}
(4.0, 6.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {4.0,6.0,0.0} 0
{"initial": [4, 6], "goal": [4, 6], "length": 0, "path": [[4, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [1, 8], "goal": [4, 20], "length": 23.82843, "path": [[1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [1, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 19], "goal": [1, 22], "length": 3, "path": [[1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(6.0, 6.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 14], "goal": [2, 23], "length": 9.41421, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(4.0, 7.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 23], "length": 0, "path": [], "navfn}
(4.0, 20.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [1, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 15], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [1, 3], "goal": [1, 10], "length": 7, "path": [[1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [6, 16], "goal": [6, 15], "length": 1, "path": [[6, 16], [6, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [1, 3], "goal": [2, 3], "length": 1, "path": [[1, 3], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0)
{"initial": [4, 8], "goal": [4, 6], "length": 2, "path": [[4, 8], [4, 7], [4, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 11], "goal": [6, 10], "length": 1, "path": [[6, 11], [6, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [1, 20], "goal": [1, 14], "length": 6, "path": [[1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn}
(6.0, 19.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [6, 19], "goal": [1, 9], "length": 21.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [6, 9], "goal": [5, 23], "length": 14.41421, "path": [[6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23]], "navfn}
(1.0, 16.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [1, 16], "goal": [4, 20], "length": 31.82843, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [1, 11], "goal": [4, 13], "length": 19.82843, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [6, 12], "goal": [1, 22], "length": 15.82843, "path": [[6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22]], "navfn}
(4.0, 8.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 8], "goal": [4, 21], "length": 13, "path": [[4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn}
(6.0, 19.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 19], "goal": [6, 12], "length": 7, "path": [[6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(3.0, 23.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [3, 23], "goal": [6, 20], "length": 5.41421, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 7], "goal": [4, 11], "length": 13.82843, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [5, 23], "goal": [6, 12], "length": 11.41421, "path": [[5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(6.0, 9.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [1, 11], "goal": [6, 13], "length": 25.82843, "path": [[1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 1], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1250.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 10.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 10], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 23], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 20], "goal": [6, 8], "length": 12, "path": [[6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(6.0, 2.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0)
{"initial": [6, 2], "goal": [3, 1], "length": 3.41421, "path": [[6, 2], [5, 1], [4, 1], [3, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 5], "goal": [1, 5], "length": 5.82843, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.3e+1,0.0} 0)
{"initial": [6, 18], "goal": [6, 23], "length": 5, "path": [[6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23]], "navfn}
(4.0, 3.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({3.0,2.1e+1,0.0} 0)
{"initial": [4, 3], "goal": [3, 21], "length": 18.41421, "path": [[4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [3, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 21], "goal": [6, 12], "length": 9, "path": [[6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(1.0, 17.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [1, 17], "goal": [4, 15], "length": 27.82843, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [4, 12], "goal": [4, 20], "length": 8, "path": [[4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn}
(4.0, 9.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [4, 9], "goal": [4, 16], "length": 7, "path": [[4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn}
(6.0, 1.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [6, 1], "goal": [5, 1], "length": 1, "path": [[6, 1], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [1, 11], "goal": [4, 21], "length": 27.82843, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [3, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [1, 7], "goal": [4, 21], "length": 23.82843, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 18], "goal": [6, 9], "length": 9, "path": [[6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9]], "navfn}
(1.0, 7.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [1, 7], "goal": [4, 10], "length": 12.82843, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 11], "goal": [6, 9], "length": 2, "path": [[6, 11], [6, 10], [6, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [4, 23], "goal": [5, 1], "length": 23.82843, "path": [[4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 14], "goal": [4, 7], "length": 7, "path": [[4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7]], "navfn}
(3.0, 23.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 23], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [1, 12], "goal": [1, 17], "length": 5, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17]], "navfn}
(6.0, 16.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 16], "goal": [6, 12], "length": 4, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(1.0, 3.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [4, 23], "length": 8.41421, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 4], "goal": [1, 14], "length": 13.82843, "path": [[4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {4.0,7.0,0.0} 0
{"initial": [4, 7], "goal": [4, 7], "length": 0, "path": [[4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 10.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [4, 10], "goal": [1, 16], "length": 21.82843, "path": [[4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [4, 16], "goal": [4, 19], "length": 3, "path": [[4, 16], [4, 17], [4, 18], [4, 19]], "navfn}
(3.0, 3.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [3, 3], "goal": [1, 8], "length": 6.41421, "path": [[3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [1, 19], "goal": [6, 4], "length": 26.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [1, 18], "goal": [6, 5], "length": 26.82843, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [1, 3], "goal": [4, 9], "length": 8.41421, "path": [[1, 3], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [4, 13], "goal": [1, 7], "length": 15.82843, "path": [[4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [1, 1], "goal": [6, 6], "length": 9.41421, "path": [[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [6, 7], "goal": [2, 1], "length": 9.41421, "path": [[6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.3e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 23], "length": 19, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23]], "navfn}
(4.0, 21.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 10], "goal": [1, 22], "length": 12, "path": [[1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(3.0, 3.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 3], "goal": [6, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [6, 9], "goal": [6, 6], "length": 3, "path": [[6, 9], [6, 8], [6, 7], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [1, 15], "goal": [6, 20], "length": 14.82843, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(6.0, 12.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [1, 13], "goal": [1, 20], "length": 7, "path": [[1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20]], "navfn}
(1.0, 9.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 9], "goal": [4, 3], "length": 8.41421, "path": [[1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 19], "goal": [3, 23], "length": 5.41421, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(6.0, 11.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 21], "goal": [2, 23], "length": 5.41421, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn}
(1.0, 23.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0)
{"initial": [1, 23], "goal": [1, 15], "length": 8, "path": [[1, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15]], "navfn}
(4.0, 21.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0)
{"initial": [4, 21], "goal": [4, 12], "length": 9, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12]], "navfn}
(3.0, 23.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [3, 23], "goal": [5, 1], "length": 24.82843, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [4, 7], "goal": [4, 17], "length": 10, "path": [[4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn}
(6.0, 12.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [6, 12], "goal": [1, 19], "length": 18.82843, "path": [[6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19]], "navfn}
(1.0, 16.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 16], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [1, 13], "goal": [1, 14], "length": 1, "path": [[1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [6, 21], "goal": [6, 4], "length": 17, "path": [[6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [6, 3], "goal": [5, 23], "length": 20.41421, "path": [[6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [4, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [6, 3], "goal": [6, 6], "length": 3, "path": [[6, 3], [6, 4], [6, 5], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 20], "length": 13, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20]], "navfn}
(4.0, 18.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [4, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 4], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [1, 22], "goal": [2, 3], "length": 19.41421, "path": [[1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 13], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [4, 14], "goal": [1, 7], "length": 16.82843, "path": [[4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [3, 3], "goal": [1, 4], "length": 2.41421, "path": [[3, 3], [2, 3], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 20], "goal": [6, 7], "length": 13, "path": [[6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn}
(4.0, 21.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 9], "goal": [2, 23], "length": 14.41421, "path": [[1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(3.0, 23.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 23], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [6, 22], "goal": [5, 1], "length": 21.41421, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [2, 23], "goal": [6, 18], "length": 8.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn}
(4.0, 20.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [1, 13], "length": 4, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13]], "navfn}
(6.0, 18.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [4, 1], "goal": [6, 6], "length": 6.41421, "path": [[4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [1, 5], "goal": [4, 8], "length": 8.82843, "path": [[1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [1, 21], "goal": [4, 1], "length": 29.24264, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [6, 23], "goal": [2, 1], "length": 25.41421, "path": [[6, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [6, 9], "goal": [1, 23], "length": 18.41421, "path": [[6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 23]], "navfn}
(4.0, 16.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [6, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [6, 17], "goal": [6, 14], "length": 3, "path": [[6, 17], [6, 16], [6, 15], [6, 14]], "navfn}
(4.0, 1.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 17], "goal": [6, 2], "length": 15, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [1, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 20], "goal": [6, 5], "length": 15, "path": [[6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [1, 14], "goal": [1, 7], "length": 7, "path": [[1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(5.0, 23.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [5, 23], "goal": [6, 22], "length": 1.41421, "path": [[5, 23], [6, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 19], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {6.0,1.9e+1,0.0} 0
{"initial": [6, 19], "goal": [6, 19], "length": 0, "path": [[6, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [1, 23], "length": 6, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [1, 23]], "navfn}
(6.0, 5.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [6, 12], "goal": [6, 15], "length": 3, "path": [[6, 12], [6, 13], [6, 14], [6, 15]], "navfn}
(4.0, 11.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 23], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 11], "goal": [6, 5], "length": 6, "path": [[6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn}
(6.0, 6.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [3, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [6, 21], "goal": [1, 4], "length": 24.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [3, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [6, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [3, 23], "goal": [6, 18], "length": 7.41421, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn}
(1.0, 13.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [1, 13], "goal": [4, 10], "length": 18.82843, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [6, 13], "goal": [6, 22], "length": 9, "path": [[6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22]], "navfn}
(1.0, 20.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [1, 4], "goal": [4, 16], "length": 15.82843, "path": [[1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [1, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [6, 11], "goal": [1, 1], "length": 14.41421, "path": [[6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 17], "goal": [6, 21], "length": 4, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21]], "navfn}
(4.0, 11.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [6, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [4, 20], "goal": [4, 19], "length": 1, "path": [[4, 20], [4, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [6, 19], "goal": [1, 13], "length": 17.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13]], "navfn}
(1.0, 3.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [1, 3], "goal": [1, 13], "length": 10, "path": [[1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [1, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [2, 3], "goal": [4, 3], "length": 2, "path": [[2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [3, 3], "goal": [5, 23], "length": 24.82843, "path": [[3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 8], "goal": [6, 22], "length": 19.82843, "path": [[1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn}
(4.0, 11.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [6, 15], "goal": [6, 4], "length": 11, "path": [[6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [5, 1], "goal": [6, 4], "length": 3.41421, "path": [[5, 1], [6, 2], [6, 3], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 4], "goal": [4, 21], "length": 17, "path": [[4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn}
(4.0, 1.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1250.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 21], "goal": [4, 9], "length": 12, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9]], "navfn}
(1.0, 3.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 6], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [1, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 6], "goal": [6, 17], "length": 11, "path": [[6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn}
(1.0, 13.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [1, 13], "goal": [1, 12], "length": 1, "path": [[1, 13], [1, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 16], "length": 17.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16]], "navfn}
(1.0, 18.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [1, 18], "goal": [6, 20], "length": 11.82843, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(1.0, 18.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 18], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [1, 19], "goal": [6, 18], "length": 12.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn}
(1.0, 17.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [1, 17], "goal": [6, 16], "length": 16.82843, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16]], "navfn}
(4.0, 6.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 6], "goal": [4, 7], "length": 1, "path": [[4, 6], [4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [6, 21], "goal": [1, 22], "length": 6.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22]], "navfn}
(6.0, 8.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 8], "goal": [6, 5], "length": 3, "path": [[6, 8], [6, 7], [6, 6], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {4.0,1.1e+1,0.0} 0
{"initial": [4, 11], "goal": [4, 11], "length": 0, "path": [[4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 1], "goal": [2, 23], "length": 25.41421, "path": [[6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [1, 23], "goal": [1, 8], "length": 15, "path": [[1, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn}
(6.0, 4.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 4], "goal": [6, 8], "length": 4, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8]], "navfn}
(6.0, 17.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [6, 17], "goal": [6, 18], "length": 1, "path": [[6, 17], [6, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 20], "goal": [6, 17], "length": 3, "path": [[6, 20], [6, 19], [6, 18], [6, 17]], "navfn}
(4.0, 5.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 9], "goal": [4, 21], "length": 12, "path": [[4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn}
(6.0, 7.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 17], "length": 10, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn}
(1.0, 10.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [1, 10], "goal": [4, 21], "length": 26.82843, "path": [[1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [1, 10], "goal": [6, 18], "length": 21.82843, "path": [[1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {1.0,1.8e+1,0.0} 0
{"initial": [1, 18], "goal": [1, 18], "length": 0, "path": [[1, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 14], "goal": [4, 21], "length": 7, "path": [[4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn}
(4.0, 7.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [1, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 17], "length": 13, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn}
(6.0, 14.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [6, 14], "goal": [1, 20], "length": 15.82843, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20]], "navfn}
(5.0, 1.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [5, 1], "goal": [6, 13], "length": 12.41421, "path": [[5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [1, 13], "goal": [4, 4], "length": 12.82843, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({3.0,2.1e+1,0.0} 0)
{"initial": [1, 9], "goal": [3, 21], "length": 26.24264, "path": [[1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [3, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [5, 23], "goal": [1, 10], "length": 16.41421, "path": [[5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10]], "navfn}
(5.0, 1.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [4, 21], "goal": [4, 8], "length": 13, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8]], "navfn}
(4.0, 15.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [6, 19], "goal": [1, 8], "length": 22.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [4, 11], "goal": [4, 4], "length": 7, "path": [[4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 15], "length": 20.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15]], "navfn}
(4.0, 20.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [6, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 10.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 10], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [2, 23], "goal": [6, 8], "length": 18.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(4.0, 18.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [6, 16], "goal": [1, 20], "length": 13.82843, "path": [[6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20]], "navfn}
(6.0, 6.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 6], "goal": [6, 13], "length": 7, "path": [[6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13]], "navfn}
(1.0, 16.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 22], "length": 11.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn}
(6.0, 2.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 2], "goal": [6, 9], "length": 7, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 10.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 10], "goal": [6, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [4, 6], "goal": [4, 15], "length": 9, "path": [[4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]], "navfn}
(6.0, 2.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 2], "goal": [6, 12], "length": 10, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [1, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 14], "goal": [1, 14], "length": 23.82843, "path": [[4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 21], "length": 12.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21]], "navfn}
(1.0, 6.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 6], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [6, 23], "goal": [1, 14], "length": 13.41421, "path": [[6, 23], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [6, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [4, 8], "goal": [4, 3], "length": 5, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [1, 21], "goal": [6, 20], "length": 8.82843, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(6.0, 11.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [1, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [1, 20], "goal": [6, 5], "length": 24.82843, "path": [[1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [4, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 21], "goal": [4, 10], "length": 11, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10]], "navfn}
(4.0, 11.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [4, 11], "goal": [1, 10], "length": 16.82843, "path": [[4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [6, 3], "goal": [1, 23], "length": 24.41421, "path": [[6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [1, 8], "goal": [1, 13], "length": 5, "path": [[1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [1, 5], "goal": [4, 21], "length": 21.82843, "path": [[1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [6, 5], "goal": [5, 1], "length": 4.41421, "path": [[6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [6, 11], "goal": [1, 22], "length": 16.82843, "path": [[6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22]], "navfn}
(6.0, 23.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [6, 23], "goal": [6, 20], "length": 3, "path": [[6, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(5.0, 1.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0)
{"initial": [4, 9], "goal": [1, 15], "length": 19.82843, "path": [[4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [4, 3], "goal": [1, 17], "length": 16.41421, "path": [[4, 3], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [6, 17], "goal": [1, 11], "length": 21.82843, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [2, 23], "goal": [6, 20], "length": 6.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(4.0, 4.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0)
{"initial": [6, 20], "goal": [6, 11], "length": 9, "path": [[6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11]], "navfn}
(4.0, 23.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [4, 23], "goal": [1, 17], "length": 8.41421, "path": [[4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17]], "navfn}
(1.0, 12.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 12], "goal": [3, 3], "length": 10.41421, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 23], "goal": [6, 22], "length": 5.41421, "path": [[1, 23], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [1, 7], "goal": [4, 16], "length": 18.82843, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [1, 15], "goal": [4, 20], "length": 30.82843, "path": [[1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 3], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 5], "goal": [1, 14], "length": 14.82843, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 22], "goal": [6, 17], "length": 5, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17]], "navfn}
(1.0, 7.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [1, 7], "goal": [1, 16], "length": 9, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16]], "navfn}
(6.0, 16.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 19], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 19], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [1, 6], "goal": [1, 3], "length": 3, "path": [[1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 18], "goal": [3, 3], "length": 16.41421, "path": [[1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [3, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [1, 20], "goal": [6, 14], "length": 15.82843, "path": [[1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14]], "navfn}
(6.0, 7.0, 0.0) (6.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 19], "length": 12, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19]], "navfn}
(1.0, 14.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [1, 14], "goal": [6, 16], "length": 19.82843, "path": [[1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16]], "navfn}
(6.0, 23.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 23], "goal": [6, 2], "length": 21, "path": [[6, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [4, 9], "goal": [1, 23], "length": 27.82843, "path": [[4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [1, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [4, 17], "goal": [4, 13], "length": 4, "path": [[4, 17], [4, 16], [4, 15], [4, 14], [4, 13]], "navfn}
(1.0, 5.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 5], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 4], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 10], "length": 6, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {1.0,8.0,0.0} 0
{"initial": [1, 8], "goal": [1, 8], "length": 0, "path": [[1, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [1, 16], "goal": [1, 8], "length": 8, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn}
(1.0, 13.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 13], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [4, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 800.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [1, 16], "goal": [1, 11], "length": 5, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11]], "navfn}
(6.0, 20.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [6, 20], "goal": [1, 3], "length": 26.82843, "path": [[6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0)
{"initial": [4, 14], "goal": [4, 12], "length": 2, "path": [[4, 14], [4, 13], [4, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [6, 21], "goal": [1, 14], "length": 14.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn}
(6.0, 21.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {6.0,2.1e+1,0.0} 0
{"initial": [6, 21], "goal": [6, 21], "length": 0, "path": [[6, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 20], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 19], "goal": [4, 10], "length": 9, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10]], "navfn}
(6.0, 8.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 8], "goal": [6, 2], "length": 6, "path": [[6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [4, 7], "goal": [1, 6], "length": 8.82843, "path": [[4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [6, 1], "goal": [6, 22], "length": 21, "path": [[6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 23], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [3, 3], "goal": [2, 3], "length": 1, "path": [[3, 3], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 6], "goal": [4, 10], "length": 4, "path": [[4, 6], [4, 7], [4, 8], [4, 9], [4, 10]], "navfn}
(6.0, 8.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [3, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 21], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 16], "goal": [6, 7], "length": 9, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn}
(6.0, 23.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 23], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0)
{"initial": [6, 6], "goal": [6, 11], "length": 5, "path": [[6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11]], "navfn}
(4.0, 8.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [6, 22], "goal": [1, 21], "length": 6.82843, "path": [[6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21]], "navfn}
(3.0, 21.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [1, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [6, 22], "goal": [1, 13], "length": 14.82843, "path": [[6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13]], "navfn}
(4.0, 21.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [4, 21], "goal": [4, 3], "length": 18, "path": [[4, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 9], "goal": [1, 22], "length": 13, "path": [[1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(4.0, 4.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 4], "goal": [1, 5], "length": 4.82843, "path": [[4, 4], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 3], "goal": [6, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 19], "goal": [6, 22], "length": 8.82843, "path": [[1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn}
(1.0, 12.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 12], "goal": [4, 3], "length": 11.41421, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [1, 7], "goal": [4, 4], "length": 6.82843, "path": [[1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [4, 6], "goal": [5, 23], "length": 28.24264, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [1, 4], "goal": [4, 9], "length": 8.82843, "path": [[1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1250.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [6, 21], "goal": [1, 20], "length": 8.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20]], "navfn}
(4.0, 18.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [4, 18], "goal": [3, 3], "length": 15.41421, "path": [[4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 1], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1200.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [1, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 10.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0e+1,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,10}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 10], "goal": [1, 5], "length": 10.82843, "path": [[4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [4, 19], "goal": [4, 11], "length": 8, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11]], "navfn}
(6.0, 14.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [6, 14], "goal": [3, 23], "length": 11.41421, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23]], "navfn}
(1.0, 23.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,1.0,0.0} 0)
{"initial": [1, 23], "goal": [6, 1], "length": 26.41421, "path": [[1, 23], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [6, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [6, 19], "goal": [5, 23], "length": 4.41421, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [1, 12], "goal": [6, 12], "length": 25.82843, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [2, 3], "goal": [4, 7], "length": 5.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 16], "goal": [6, 10], "length": 6, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn}
(1.0, 10.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [1, 9], "goal": [6, 18], "length": 22.82843, "path": [[1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 21], "goal": [4, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 3], "goal": [4, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [6, 3], "goal": [6, 7], "length": 4, "path": [[6, 3], [6, 4], [6, 5], [6, 6], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 8], "goal": [4, 23], "length": 16.41421, "path": [[6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 22], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 19], "goal": [6, 9], "length": 10, "path": [[6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9]], "navfn}
(6.0, 11.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0)
{"initial": [6, 11], "goal": [6, 18], "length": 7, "path": [[6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18]], "navfn}
(4.0, 3.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [4, 3], "goal": [1, 12], "length": 11.41421, "path": [[4, 3], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {4.0,1.0,0.0} 0
{"initial": [4, 1], "goal": [4, 1], "length": 0, "path": [[4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [1, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [1, 17], "goal": [1, 14], "length": 3, "path": [[1, 17], [1, 16], [1, 15], [1, 14]], "navfn}
(6.0, 11.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [6, 11], "goal": [5, 1], "length": 10.41421, "path": [[6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({3.0,2.1e+1,0.0} 0)
{"initial": [1, 11], "goal": [3, 21], "length": 28.24264, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [3, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 13], "goal": [4, 23], "length": 11.41421, "path": [[6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn}
(1.0, 5.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 5], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [6, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 15], "goal": [6, 10], "length": 5, "path": [[6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn}
(1.0, 14.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 14], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [4, 9], "goal": [4, 8], "length": 1, "path": [[4, 9], [4, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [1, 12], "goal": [4, 8], "length": 15.82843, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [4, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [4, 8], "goal": [1, 11], "length": 14.82843, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {1.0,6.0,0.0} 0
{"initial": [1, 6], "goal": [1, 6], "length": 0, "path": [[1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [2, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [1, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [6, 12], "goal": [1, 18], "length": 19.82843, "path": [[6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn}
(1.0, 3.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 3], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 19], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [6, 10], "goal": [1, 1], "length": 13.41421, "path": [[6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [4, 20], "goal": [4, 15], "length": 5, "path": [[4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15]], "navfn}
(6.0, 10.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 15], "goal": [6, 13], "length": 2, "path": [[6, 15], [6, 14], [6, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [2, 23], "goal": [6, 10], "length": 16.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0)
{"initial": [1, 21], "goal": [6, 3], "length": 25.82843, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [1, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 11], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 9], "goal": [2, 23], "length": 17.41421, "path": [[6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn}
(4.0, 12.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [4, 12], "goal": [1, 9], "length": 16.82843, "path": [[4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 2], "goal": [6, 17], "length": 15, "path": [[6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [1, 11], "goal": [4, 16], "length": 22.82843, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [4, 11], "goal": [1, 3], "length": 10.41421, "path": [[4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [4, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [4, 4], "goal": [1, 9], "length": 8.82843, "path": [[4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 14], "goal": [6, 10], "length": 4, "path": [[6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn}
(4.0, 7.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 14], "goal": [6, 17], "length": 3, "path": [[6, 14], [6, 15], [6, 16], [6, 17]], "navfn}
(6.0, 7.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [6, 7], "goal": [6, 6], "length": 1, "path": [[6, 7], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [1, 16], "goal": [4, 16], "length": 27.82843, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 5], "goal": [6, 10], "length": 5, "path": [[6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10]], "navfn}
(4.0, 20.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [2, 3], "goal": [4, 21], "length": 19.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 3], "goal": [6, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [6, 13], "goal": [2, 1], "length": 15.41421, "path": [[6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 1], "goal": [6, 17], "length": 16, "path": [[6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 13], "goal": [4, 3], "length": 12.41421, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 7], "goal": [4, 10], "length": 3, "path": [[4, 7], [4, 8], [4, 9], [4, 10]], "navfn}
(4.0, 7.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [4, 7], "goal": [1, 11], "length": 13.82843, "path": [[4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0)
{"initial": [4, 12], "goal": [4, 14], "length": 2, "path": [[4, 12], [4, 13], [4, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0)
{"initial": [4, 1], "goal": [6, 3], "length": 3.41421, "path": [[4, 1], [5, 1], [6, 2], [6, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 3.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [1, 3], "goal": [4, 23], "length": 22.41421, "path": [[1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [1, 18], "goal": [6, 14], "length": 17.82843, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14]], "navfn}
(4.0, 6.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 14], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 18], "goal": [4, 23], "length": 6.41421, "path": [[6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn}
(6.0, 4.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [3, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 18], "goal": [3, 23], "length": 6.41421, "path": [[1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(1.0, 7.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [1, 7], "goal": [1, 12], "length": 5, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12]], "navfn}
(6.0, 5.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [6, 5], "goal": [6, 16], "length": 11, "path": [[6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16]], "navfn}
(3.0, 21.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [3, 21], "goal": [4, 11], "length": 10.41421, "path": [[3, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11]], "navfn}
(1.0, 9.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 9], "goal": [6, 22], "length": 18.82843, "path": [[1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn}
(3.0, 1.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [3, 1], "goal": [6, 8], "length": 9.41421, "path": [[3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [5, 23], "goal": [2, 1], "length": 25.82843, "path": [[5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0)
{"initial": [4, 17], "goal": [4, 16], "length": 1, "path": [[4, 17], [4, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 7], "goal": [1, 21], "length": 14, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21]], "navfn}
(4.0, 4.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [4, 4], "goal": [3, 3], "length": 1.41421, "path": [[4, 4], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 11], "goal": [3, 3], "length": 9.41421, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [1, 15], "goal": [1, 19], "length": 4, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19]], "navfn}
(1.0, 13.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [1, 13], "goal": [3, 3], "length": 11.41421, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [6, 17], "goal": [1, 17], "length": 15.82843, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17]], "navfn}
(5.0, 1.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 1250.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0)
{"initial": [4, 16], "goal": [4, 4], "length": 12, "path": [[4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [1, 16], "goal": [6, 14], "length": 19.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14]], "navfn}
(4.0, 9.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [4, 9], "goal": [1, 6], "length": 10.82843, "path": [[4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [4, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 4], "goal": [6, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 6], "goal": [1, 5], "length": 6.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {1.0,4.0,0.0} 0
{"initial": [1, 4], "goal": [1, 4], "length": 0, "path": [[1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0)
{"initial": [4, 7], "goal": [4, 9], "length": 2, "path": [[4, 7], [4, 8], [4, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [1, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [1, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1200.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [6, 18], "goal": [1, 19], "length": 12.82843, "path": [[6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19]], "navfn}
(6.0, 16.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [6, 16], "goal": [1, 17], "length": 16.82843, "path": [[6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17]], "navfn}
(1.0, 5.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [1, 5], "goal": [4, 7], "length": 7.82843, "path": [[1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (1.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {1.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {1,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0)
{"initial": [1, 17], "goal": [1, 9], "length": 8, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9]], "navfn}
(1.0, 22.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [1, 22], "goal": [6, 8], "length": 19.82843, "path": [[1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(4.0, 1.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 1], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0)
{"initial": [1, 17], "goal": [4, 14], "length": 26.82843, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 13], "goal": [6, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 17], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0)
{"initial": [1, 16], "goal": [6, 7], "length": 26.82843, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 23], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0)
{"initial": [6, 17], "goal": [5, 1], "length": 16.41421, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [6, 11], "goal": [1, 20], "length": 18.82843, "path": [[6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20]], "navfn}
(1.0, 10.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [1, 10], "goal": [4, 8], "length": 13.82843, "path": [[1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [2, 23], "goal": [1, 8], "length": 15.41421, "path": [[2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn}
(4.0, 12.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 1], "goal": [1, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [4, 3], "goal": [4, 13], "length": 10, "path": [[4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13]], "navfn}
(1.0, 13.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [1, 13], "goal": [1, 8], "length": 5, "path": [[1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8]], "navfn}
(1.0, 3.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,3.0,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,3}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [1, 3], "goal": [4, 19], "length": 18.41421, "path": [[1, 3], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 13], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [1, 21], "goal": [6, 21], "length": 7.82843, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21]], "navfn}
(6.0, 14.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [2, 1], "goal": [6, 13], "length": 15.41421, "path": [[2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 6], "goal": [1, 21], "length": 15, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21]], "navfn}
(6.0, 14.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 14], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 17], "goal": [6, 12], "length": 5, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 6.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 12], "goal": [4, 11], "length": 18.82843, "path": [[1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 12], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [4, 8], "goal": [4, 23], "length": 29.24264, "path": [[4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [4, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [1, 1], "goal": [6, 8], "length": 11.41421, "path": [[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [6, 9], "goal": [6, 16], "length": 7, "path": [[6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16]], "navfn}
(2.0, 1.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [2, 1], "goal": [6, 22], "length": 24.41421, "path": [[2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [1, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 14], "goal": [4, 1], "length": 14.41421, "path": [[6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 8], "goal": [6, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0)
{"initial": [4, 19], "goal": [3, 3], "length": 16.41421, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 800.0, 750.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 1300.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [6, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 1450.0, 1500.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (4.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {4.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {4,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [4, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [2, 23], "goal": [2, 1], "length": 28.82843, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [4, 5], "goal": [2, 23], "length": 24.24264, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0)
{"initial": [1, 11], "goal": [1, 6], "length": 5, "path": [[1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [3, 21], "goal": [4, 3], "length": 18.41421, "path": [[3, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [2, 3], "goal": [1, 10], "length": 7.41421, "path": [[2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 21.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.1e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {3,21}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.1e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [3, 21], "goal": [1, 3], "length": 20.82843, "path": [[3, 21], [4, 20], [4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [1, 15], "goal": [6, 9], "length": 25.82843, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 14], "goal": [4, 11], "length": 20.82843, "path": [[1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [3, 23], "goal": [6, 8], "length": 17.41421, "path": [[3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(6.0, 10.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [1, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [4, 7], "goal": [1, 13], "length": 15.82843, "path": [[4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0)
{"initial": [6, 18], "goal": [3, 1], "length": 19.41421, "path": [[6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 23.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 23], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (5.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {5.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {5,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0)
{"initial": [1, 21], "goal": [5, 23], "length": 5.41421, "path": [[1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23]], "navfn}
(1.0, 9.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 9], "goal": [6, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (1.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [1, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 15], "goal": [4, 10], "length": 5, "path": [[4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10]], "navfn}
(6.0, 16.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [6, 16], "goal": [1, 21], "length": 12.82843, "path": [[6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21]], "navfn}
(1.0, 16.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [1, 16], "goal": [1, 10], "length": 6, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10]], "navfn}
(6.0, 5.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 13], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 14], "length": 7, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14]], "navfn}
(1.0, 8.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [1, 8], "goal": [1, 5], "length": 3, "path": [[1, 8], [1, 7], [1, 6], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 23], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [4, 17], "goal": [1, 10], "length": 22.82843, "path": [[4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 6], "goal": [4, 3], "length": 5.41421, "path": [[1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [5, 1], "goal": [6, 14], "length": 13.41421, "path": [[5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 23], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [6, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [1, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 15.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 15], "goal": [2, 23], "length": 8.41421, "path": [[1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(1.0, 15.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.5e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,15}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 15], "goal": [4, 3], "length": 14.41421, "path": [[1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 16], "goal": [6, 2], "length": 14, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 6], "goal": [6, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [1, 4], "goal": [1, 5], "length": 1, "path": [[1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 1], "goal": [4, 1], "length": 2, "path": [[6, 1], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 9], "goal": [6, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 1350.0, 1400.0, 1450.0, 1500.0, 1550.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [2, 3], "goal": [1, 14], "length": 11.41421, "path": [[2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [3, 3], "goal": [4, 17], "length": 14.41421, "path": [[3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 21.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [1, 21], "goal": [1, 11], "length": 10, "path": [[1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11]], "navfn}
(1.0, 12.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [1, 12], "goal": [6, 17], "length": 20.82843, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17]], "navfn}
(1.0, 14.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0)
{"initial": [1, 14], "goal": [4, 19], "length": 28.82843, "path": [[1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [6, 1], "goal": [6, 4], "length": 3, "path": [[6, 1], [6, 2], [6, 3], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [2, 23], "goal": [1, 17], "length": 6.41421, "path": [[2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17]], "navfn}
(6.0, 9.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [6, 9], "goal": [4, 23], "length": 15.41421, "path": [[6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23]], "navfn}
(1.0, 10.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 10], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 12.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [4, 12], "goal": [2, 3], "length": 10.41421, "path": [[4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [6, 15], "goal": [3, 23], "length": 10.41421, "path": [[6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23]], "navfn}
(4.0, 20.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [3, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0)
{"initial": [6, 15], "goal": [6, 21], "length": 6, "path": [[6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21]], "navfn}
(4.0, 18.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 2], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 15.0, 0.0) (6.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.5e+1,0.0} 0, {6.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,15}, {6,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 15], "goal": [6, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 7.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,7.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,7}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 7], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (6.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {6.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {6,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0)
{"initial": [6, 12], "goal": [6, 17], "length": 5, "path": [[6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 10.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({3.0,2.1e+1,0.0} 0)
{"initial": [1, 10], "goal": [3, 21], "length": 27.24264, "path": [[1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [3, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [1, 20], "goal": [6, 8], "length": 21.82843, "path": [[1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 3], "goal": [4, 1], "length": 3.41421, "path": [[6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [6, 21], "goal": [1, 7], "length": 21.82843, "path": [[6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 8], "goal": [1, 21], "length": 13, "path": [[1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21]], "navfn}
(6.0, 9.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0)
{"initial": [6, 9], "goal": [6, 11], "length": 2, "path": [[6, 9], [6, 10], [6, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [4, 23], "goal": [1, 7], "length": 18.41421, "path": [[4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(6.0, 6.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 6], "goal": [1, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 9], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 1.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,1}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 1], "goal": [1, 14], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [4, 8], "goal": [4, 11], "length": 3, "path": [[4, 8], [4, 9], [4, 10], [4, 11]], "navfn}
(6.0, 8.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 8], "goal": [2, 23], "length": 18.41421, "path": [[6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn}
(1.0, 7.0, 0.0) (6.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 7], "goal": [6, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (1.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {1.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {1,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0)
{"initial": [1, 5], "goal": [1, 15], "length": 10, "path": [[1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15]], "navfn}
(4.0, 23.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 23], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [1, 6], "goal": [1, 4], "length": 2, "path": [[1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [1, 7], "goal": [6, 22], "length": 20.82843, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22]], "navfn}
(6.0, 4.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 12], "length": 8, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 4], "goal": [2, 23], "length": 22.41421, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {6.0,1.5e+1,0.0} 0
{"initial": [6, 15], "goal": [6, 15], "length": 0, "path": [[6, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0)
{"initial": [4, 5], "goal": [1, 11], "length": 11.82843, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 23.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.3e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,23}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [1, 23], "goal": [6, 12], "length": 15.41421, "path": [[1, 23], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(4.0, 6.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 6], "goal": [6, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 14.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.4e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,14}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 14], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0)
{"initial": [6, 17], "goal": [3, 1], "length": 18.41421, "path": [[6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (6.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {6.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {6,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0)
{"initial": [6, 13], "goal": [6, 14], "length": 1, "path": [[6, 13], [6, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0)
{"initial": [4, 9], "goal": [4, 18], "length": 9, "path": [[4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18]], "navfn}
(6.0, 4.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 4], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0)
{"initial": [2, 23], "goal": [6, 12], "length": 14.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12]], "navfn}
(6.0, 1.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [1, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [1, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0)
{"initial": [6, 22], "goal": [6, 6], "length": 16, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [4, 6], "goal": [1, 4], "length": 5.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 4.0, 0.0) (6.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,4.0,0.0} 0, {6.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,4}, {6,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0)
{"initial": [6, 4], "goal": [6, 13], "length": 9, "path": [[6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13]], "navfn}
(6.0, 19.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [6, 19], "goal": [1, 20], "length": 10.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20]], "navfn}
(1.0, 20.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 20], "goal": [4, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 13.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [3, 23], "goal": [1, 7], "length": 17.41421, "path": [[3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7]], "navfn}
(6.0, 6.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,6.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,6}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [6, 6], "goal": [6, 15], "length": 9, "path": [[6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15]], "navfn}
(1.0, 21.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.1e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,21}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [1, 21], "goal": [1, 14], "length": 7, "path": [[1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 17.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.7e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,17}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 17], "goal": [4, 7], "length": 10, "path": [[4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7]], "navfn}
(6.0, 15.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [6, 15], "goal": [6, 20], "length": 5, "path": [[6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20]], "navfn}
(6.0, 22.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [6, 22], "goal": [1, 1], "length": 25.41421, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> {1.0,1.9e+1,0.0} 0
{"initial": [1, 19], "goal": [1, 19], "length": 0, "path": [[1, 19]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 20], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [1, 17], "goal": [4, 7], "length": 19.82843, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (4.0, 23.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {4.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {4,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0)
{"initial": [5, 23], "goal": [4, 23], "length": 1, "path": [[5, 23], [4, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [1, 17], "goal": [3, 23], "length": 7.41421, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23]], "navfn}
(4.0, 5.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0)
{"initial": [4, 5], "goal": [1, 8], "length": 8.82843, "path": [[4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 10.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,10}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 10], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 1], "goal": [1, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0)
{"initial": [4, 16], "goal": [4, 7], "length": 9, "path": [[4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7]], "navfn}
(4.0, 16.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [6, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 9.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,9.0,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,9}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0)
{"initial": [1, 9], "goal": [1, 4], "length": 5, "path": [[1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (4.0, 7.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {4.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {4,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 21], "goal": [4, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (1.0, 16.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {1.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {1,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0)
{"initial": [4, 11], "goal": [1, 16], "length": 22.82843, "path": [[4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 700.0, 750.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [6, 15], "goal": [1, 14], "length": 20.82843, "path": [[6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 7], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 22.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [1, 22], "goal": [1, 12], "length": 10, "path": [[1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12]], "navfn}
(6.0, 8.0, 0.0) (3.0, 21.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {3.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {3,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [3, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0)
{"initial": [4, 13], "goal": [4, 10], "length": 3, "path": [[4, 13], [4, 12], [4, 11], [4, 10]], "navfn}
(6.0, 13.0, 0.0) (1.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.3e+1,0.0} 0, {1.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,13}, {1,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 13], "goal": [1, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0)
{"initial": [6, 15], "goal": [6, 8], "length": 7, "path": [[6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8]], "navfn}
(6.0, 15.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 15], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 22], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (1.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {1.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {1,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.3e+1,0.0} 0)
{"initial": [6, 5], "goal": [1, 23], "length": 22.41421, "path": [[6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 21.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.1e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,21}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 21], "goal": [6, 5], "length": 16, "path": [[6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 12.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0)
{"initial": [1, 12], "goal": [1, 22], "length": 10, "path": [[1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22]], "navfn}
(1.0, 10.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.0e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,10}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 10], "goal": [4, 3], "length": 9.41421, "path": [[1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [6, 22], "goal": [2, 1], "length": 24.41421, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (6.0, 16.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0)
{"initial": [1, 13], "goal": [6, 16], "length": 20.82843, "path": [[1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 8.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,8.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,8}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 8], "goal": [2, 23], "length": 15.41421, "path": [[1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(6.0, 11.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [4, 6], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.9e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0)
{"initial": [4, 19], "goal": [2, 3], "length": 17.41421, "path": [[4, 19], [4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 17], "goal": [4, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [1, 16], "goal": [1, 3], "length": 13, "path": [[1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 22.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 22], "goal": [6, 10], "length": 12, "path": [[6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10]], "navfn}
(4.0, 18.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.8e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [4, 18], "goal": [1, 7], "length": 20.82843, "path": [[4, 18], [4, 17], [4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0)
{"initial": [3, 3], "goal": [1, 7], "length": 5.41421, "path": [[3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [2, 23], "goal": [6, 5], "length": 21.41421, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5]], "navfn}
(4.0, 8.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [4, 8], "goal": [4, 20], "length": 12, "path": [[4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn}
(6.0, 9.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 6.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,6.0,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,6}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0)
{"initial": [4, 16], "goal": [4, 6], "length": 10, "path": [[4, 16], [4, 15], [4, 14], [4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6]], "navfn}
(6.0, 22.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.2e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,22}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [6, 22], "goal": [1, 3], "length": 24.82843, "path": [[6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (3.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {3.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {3,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [3, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 1.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.0,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,1}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0)
{"initial": [4, 1], "goal": [2, 1], "length": 2, "path": [[4, 1], [3, 1], [2, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 1], "goal": [6, 2], "length": 1, "path": [[6, 1], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (6.0, 3.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 200.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1250.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 2], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [1, 11], "goal": [1, 18], "length": 7, "path": [[1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18]], "navfn}
(4.0, 20.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 20], "goal": [4, 21], "length": 1, "path": [[4, 20], [4, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 18.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.8e+1,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,18}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0)
{"initial": [1, 18], "goal": [4, 13], "length": 26.82843, "path": [[1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 23.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({2.0,2.3e+1,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {2,23}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0)
{"initial": [2, 23], "goal": [3, 1], "length": 27.82843, "path": [[2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (4.0, 16.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {4.0,1.6e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {4,16}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [4, 16], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 3.0, 0.0) (4.0, 8.0, 0.0)
OK when reducing computePath(getPotential({2.0,3.0,0.0} 0, {4.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {2,3}, {4,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0)
{"initial": [2, 3], "goal": [4, 8], "length": 6.41421, "path": [[2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 23.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [4, 23], "goal": [2, 23], "length": 2, "path": [[4, 23], [3, 23], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 13], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.3e+1,0.0} 0)
{"initial": [6, 8], "goal": [6, 23], "length": 15, "path": [[6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 20.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.0e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,20}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 20], "goal": [6, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 4], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0)
{"initial": [6, 1], "goal": [6, 15], "length": 14, "path": [[6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (1.0, 10.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {1.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {1,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0)
{"initial": [1, 6], "goal": [1, 10], "length": 4, "path": [[1, 6], [1, 7], [1, 8], [1, 9], [1, 10]], "navfn}
(1.0, 22.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.2e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {1,22}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 22], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 17.0, 0.0) (1.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.7e+1,0.0} 0, {1.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,17}, {1,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0)
{"initial": [6, 17], "goal": [1, 19], "length": 13.82843, "path": [[6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19]], "navfn}
(4.0, 12.0, 0.0) (5.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.2e+1,0.0} 0, {5.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,12}, {5,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 12], "goal": [5, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 100.0, 50.0, 0.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 1200.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 14.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.4e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,14}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [6, 14], "goal": [1, 18], "length": 17.82843, "path": [[6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn}
(5.0, 23.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0)
{"initial": [5, 23], "goal": [1, 13], "length": 13.41421, "path": [[5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13]], "navfn}
(1.0, 12.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.2e+1,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {1,12}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 12], "goal": [6, 5], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 21.0, 0.0) (1.0, 7.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.1e+1,0.0} 0, {1.0,7.0,0.0} 0, {mtIL}, 8, 25, 33), {4,21}, {1,7}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 21], "goal": [1, 7], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 250.0, 300.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 4.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [4, 4], "goal": [4, 15], "length": 11, "path": [[4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]], "navfn}
(4.0, 4.0, 0.0) (4.0, 20.0, 0.0)
OK when reducing computePath(getPotential({4.0,4.0,0.0} 0, {4.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,4}, {4,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0)
{"initial": [4, 4], "goal": [4, 20], "length": 16, "path": [[4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18], [4, 19], [4, 20]], "navfn}
(6.0, 23.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.3e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,23}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0)
{"initial": [6, 23], "goal": [6, 9], "length": 14, "path": [[6, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (4.0, 18.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0)
{"initial": [1, 17], "goal": [4, 18], "length": 30.82843, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17], [4, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (1.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {1.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {1,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0)
{"initial": [4, 11], "goal": [1, 5], "length": 11.82843, "path": [[4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (1.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {1.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {1,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 12], "goal": [1, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 1.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({3.0,1.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {3,1}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [3, 1], "goal": [3, 23], "length": 26.82843, "path": [[3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (6.0, 23.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {6.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {6,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.3e+1,0.0} 0)
{"initial": [5, 1], "goal": [6, 23], "length": 22.41421, "path": [[5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [4, 6], "goal": [1, 12], "length": 13.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 16.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.6e+1,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,16}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [1, 16], "goal": [2, 23], "length": 7.41421, "path": [[1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23]], "navfn}
(6.0, 20.0, 0.0) (4.0, 19.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {4.0,1.9e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {4,19}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 20], "goal": [4, 19], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 4.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,4.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,4}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 4], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 3.0, 0.0) (3.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,3.0,0.0} 0, {3.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,3}, {3,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 3], "goal": [3, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 6.0, 0.0) (6.0, 12.0, 0.0)
OK when reducing computePath(getPotential({1.0,6.0,0.0} 0, {6.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,6}, {6,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 6], "goal": [6, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 800.0, 750.0, 700.0, 650.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 20.0, 0.0) (1.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,2.0e+1,0.0} 0, {1.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,20}, {1,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0)
{"initial": [1, 20], "goal": [1, 21], "length": 1, "path": [[1, 20], [1, 21]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 3], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 19.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.9e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {4,19}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 19], "goal": [6, 4], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,1.0,0.0} 0)
{"initial": [6, 16], "goal": [6, 1], "length": 15, "path": [[6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [6, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 7.0, 0.0) (1.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,7.0,0.0} 0, {1.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,7}, {1,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0)
{"initial": [1, 7], "goal": [1, 20], "length": 13, "path": [[1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20]], "navfn}
(5.0, 23.0, 0.0) (1.0, 1.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {1.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {1,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({2.0,1.0,0.0} 0) ({1.0,1.0,0.0} 0)
{"initial": [5, 23], "goal": [1, 1], "length": 26.82843, "path": [[5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1], [3, 1], [2, 1], [1, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 8.0, 0.0) (4.0, 5.0, 0.0)
OK when reducing computePath(getPotential({4.0,8.0,0.0} 0, {4.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {4,8}, {4,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0)
{"initial": [4, 8], "goal": [4, 5], "length": 3, "path": [[4, 8], [4, 7], [4, 6], [4, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 3.0, 0.0) (2.0, 1.0, 0.0)
OK when reducing computePath(getPotential({3.0,3.0,0.0} 0, {2.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {3,3}, {2,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [3, 3], "goal": [2, 1], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 1550.0, 1500.0, 1450.0, 1400.0, 1350.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 11.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.1e+1,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {1,11}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 11], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 16.0, 0.0) (4.0, 9.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {4.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {4,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 16], "goal": [4, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 400.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 13.0, 0.0) (6.0, 20.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.3e+1,0.0} 0, {6.0,2.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,13}, {6,20}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0)
{"initial": [1, 13], "goal": [6, 20], "length": 16.82843, "path": [[1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20]], "navfn}
(4.0, 23.0, 0.0) (6.0, 1.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {6.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {6,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,1.0,0.0} 0)
{"initial": [4, 23], "goal": [6, 1], "length": 23.41421, "path": [[4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [6, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 8.0, 0.0) (4.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,8.0,0.0} 0, {4.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,8}, {4,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 8], "goal": [4, 10], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 600.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 15.0, 0.0) (2.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.5e+1,0.0} 0, {2.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,15}, {2,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 15], "goal": [2, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 1050.0, 1000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1250.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 13.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 11], "goal": [1, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 500.0, 550.0, 600.0, 650.0, 700.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 13.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.3e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,13}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.3e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 13], "goal": [1, 14], "length": 22.82843, "path": [[4, 13], [4, 12], [4, 11], [4, 10], [4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 5.0, 0.0) (6.0, 8.0, 0.0)
OK when reducing computePath(getPotential({4.0,5.0,0.0} 0, {6.0,8.0,0.0} 0, {mtIL}, 8, 25, 33), {4,5}, {6,8}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 5], "goal": [6, 8], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 7], "goal": [4, 1], "length": 7.41421, "path": [[6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(3.0, 23.0, 0.0) (1.0, 3.0, 0.0)
OK when reducing computePath(getPotential({3.0,2.3e+1,0.0} 0, {1.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {3,23}, {1,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,3.0,0.0} 0)
{"initial": [3, 23], "goal": [1, 3], "length": 21.41421, "path": [[3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [1, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [3, 23], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 14.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.4e+1,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {1,14}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,3.0,0.0} 0)
{"initial": [1, 14], "goal": [4, 3], "length": 13.41421, "path": [[1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 3]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 3.0, 0.0) (2.0, 23.0, 0.0)
OK when reducing computePath(getPotential({6.0,3.0,0.0} 0, {2.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,3}, {2,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0)
{"initial": [6, 3], "goal": [2, 23], "length": 23.41421, "path": [[6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 50.0, 100.0, 150.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [6, 18], "goal": [1, 14], "length": 17.82843, "path": [[6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14]], "navfn}
(4.0, 16.0, 0.0) (1.0, 22.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {1.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {1,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 16], "goal": [1, 22], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 1000.0, 1050.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (6.0, 10.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {6.0,1.0e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {6,10}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0)
{"initial": [6, 12], "goal": [6, 10], "length": 2, "path": [[6, 12], [6, 11], [6, 10]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 18.0, 0.0) (6.0, 9.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.8e+1,0.0} 0, {6.0,9.0,0.0} 0, {mtIL}, 8, 25, 33), {4,18}, {6,9}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 18], "goal": [6, 9], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0) ({4.0,1.8e+1,0.0} 0) ({4.0,1.9e+1,0.0} 0) ({4.0,2.0e+1,0.0} 0) ({4.0,2.1e+1,0.0} 0)
{"initial": [4, 16], "goal": [4, 21], "length": 5, "path": [[4, 16], [4, 17], [4, 18], [4, 19], [4, 20], [4, 21]], "navfn}
(4.0, 23.0, 0.0) (4.0, 12.0, 0.0)
OK when reducing computePath(getPotential({4.0,2.3e+1,0.0} 0, {4.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,23}, {4,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 23], "goal": [4, 12], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 550.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 18.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.8e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,18}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 18], "goal": [4, 15], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 1], "goal": [4, 17], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 800.0, 750.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 11.0, 0.0) (6.0, 18.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.1e+1,0.0} 0, {6.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,11}, {6,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [4, 11], "goal": [6, 18], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 900.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 500.0, 450.0, 400.0, 350.0, 300.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 5.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({1.0,5.0,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,5}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [1, 5], "goal": [4, 15], "length": 15.82843, "path": [[1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 700.0, 650.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 6.0, 0.0) (1.0, 14.0, 0.0)
OK when reducing computePath(getPotential({4.0,6.0,0.0} 0, {1.0,1.4e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,6}, {1,14}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0)
{"initial": [4, 6], "goal": [1, 14], "length": 15.82843, "path": [[4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 600.0, 650.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 20.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,20}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 20], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(2.0, 1.0, 0.0) (3.0, 23.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {3.0,2.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {3,23}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({2.0,1.0,0.0} 0) ({3.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0) ({5.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0)
{"initial": [2, 1], "goal": [3, 23], "length": 27.82843, "path": [[2, 1], [3, 1], [4, 1], [5, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 1400.0, 1350.0, 1300.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 1100.0, 1150.0, 1200.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 100.0, 50.0, 0.0, 50.0, 100.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [1, 17], "goal": [6, 4], "length": 28.82843, "path": [[1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22], [2, 23], [3, 23], [4, 23], [5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 350.0, 300.0, 250.0, 200.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 1200.0, 1150.0, 1100.0, 1050.0, 1000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 11.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.1e+1,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,11}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [6, 11], "goal": [1, 17], "length": 21.82843, "path": [[6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 19.0, 0.0) (4.0, 21.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.9e+1,0.0} 0, {4.0,2.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,19}, {4,21}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [1, 19], "goal": [4, 21], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 1000.0, 950.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 9.0, 0.0) (1.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {1.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {1,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,4.0,0.0} 0) ({3.0,3.0,0.0} 0) ({2.0,3.0,0.0} 0) ({1.0,4.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0)
{"initial": [4, 9], "goal": [1, 17], "length": 21.82843, "path": [[4, 9], [4, 8], [4, 7], [4, 6], [4, 5], [4, 4], [3, 3], [2, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 5], "goal": [4, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 1600.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (1.0, 12.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {1.0,1.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {1,12}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0) ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0)
{"initial": [6, 19], "goal": [1, 12], "length": 18.82843, "path": [[6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18], [1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12]], "navfn}
(4.0, 9.0, 0.0) (4.0, 17.0, 0.0)
OK when reducing computePath(getPotential({4.0,9.0,0.0} 0, {4.0,1.7e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,9}, {4,17}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0) ({4.0,1.2e+1,0.0} 0) ({4.0,1.3e+1,0.0} 0) ({4.0,1.4e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0) ({4.0,1.6e+1,0.0} 0) ({4.0,1.7e+1,0.0} 0)
{"initial": [4, 9], "goal": [4, 17], "length": 8, "path": [[4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14], [4, 15], [4, 16], [4, 17]], "navfn}
(2.0, 1.0, 0.0) (1.0, 11.0, 0.0)
OK when reducing computePath(getPotential({2.0,1.0,0.0} 0, {1.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {2,1}, {1,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [2, 1], "goal": [1, 11], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 450.0, 500.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 2.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,2.0,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,2}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 2], "goal": [4, 1], "length": 2.41421, "path": [[6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 9.0, 0.0) (4.0, 3.0, 0.0)
OK when reducing computePath(getPotential({6.0,9.0,0.0} 0, {4.0,3.0,0.0} 0, {mtIL}, 8, 25, 33), {6,9}, {4,3}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [6, 9], "goal": [4, 3], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 950.0, 900.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 1150.0, 1200.0, 1250.0, 1300.0, 1350.0, 1400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 1.0, 0.0) (6.0, 5.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.0,0.0} 0, {6.0,5.0,0.0} 0, {mtIL}, 8, 25, 33), {6,1}, {6,5}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.0,0.0} 0) ({6.0,2.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,5.0,0.0} 0)
{"initial": [6, 1], "goal": [6, 5], "length": 4, "path": [[6, 1], [6, 2], [6, 3], [6, 4], [6, 5]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 23.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({5.0,2.3e+1,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {5,23}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({5.0,2.3e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [5, 23], "goal": [6, 2], "length": 21.41421, "path": [[5, 23], [6, 22], [6, 21], [6, 20], [6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 200.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 1050.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 12.0, 0.0) (4.0, 1.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.2e+1,0.0} 0, {4.0,1.0,0.0} 0, {mtIL}, 8, 25, 33), {6,12}, {4,1}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0) ({5.0,1.0,0.0} 0) ({4.0,1.0,0.0} 0)
{"initial": [6, 12], "goal": [4, 1], "length": 12.41421, "path": [[6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [5, 1], [4, 1]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 0.0, 50.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 19.0, 0.0) (6.0, 4.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.9e+1,0.0} 0, {6.0,4.0,0.0} 0, {mtIL}, 8, 25, 33), {6,19}, {6,4}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.9e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,7.0,0.0} 0) ({6.0,6.0,0.0} 0) ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0)
{"initial": [6, 19], "goal": [6, 4], "length": 15, "path": [[6, 19], [6, 18], [6, 17], [6, 16], [6, 15], [6, 14], [6, 13], [6, 12], [6, 11], [6, 10], [6, 9], [6, 8], [6, 7], [6, 6], [6, 5], [6, 4]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(1.0, 17.0, 0.0) (4.0, 11.0, 0.0)
OK when reducing computePath(getPotential({1.0,1.7e+1,0.0} 0, {4.0,1.1e+1,0.0} 0, {mtIL}, 8, 25, 33), {1,17}, {4,11}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({1.0,1.7e+1,0.0} 0) ({1.0,1.6e+1,0.0} 0) ({1.0,1.5e+1,0.0} 0) ({1.0,1.4e+1,0.0} 0) ({1.0,1.3e+1,0.0} 0) ({1.0,1.2e+1,0.0} 0) ({1.0,1.1e+1,0.0} 0) ({1.0,1.0e+1,0.0} 0) ({1.0,9.0,0.0} 0) ({1.0,8.0,0.0} 0) ({1.0,7.0,0.0} 0) ({1.0,6.0,0.0} 0) ({1.0,5.0,0.0} 0) ({1.0,4.0,0.0} 0) ({2.0,3.0,0.0} 0) ({3.0,3.0,0.0} 0) ({4.0,4.0,0.0} 0) ({4.0,5.0,0.0} 0) ({4.0,6.0,0.0} 0) ({4.0,7.0,0.0} 0) ({4.0,8.0,0.0} 0) ({4.0,9.0,0.0} 0) ({4.0,1.0e+1,0.0} 0) ({4.0,1.1e+1,0.0} 0)
{"initial": [1, 17], "goal": [4, 11], "length": 23.82843, "path": [[1, 17], [1, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [1, 10], [1, 9], [1, 8], [1, 7], [1, 6], [1, 5], [1, 4], [2, 3], [3, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 5.0, 0.0) (6.0, 2.0, 0.0)
OK when reducing computePath(getPotential({6.0,5.0,0.0} 0, {6.0,2.0,0.0} 0, {mtIL}, 8, 25, 33), {6,5}, {6,2}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,5.0,0.0} 0) ({6.0,4.0,0.0} 0) ({6.0,3.0,0.0} 0) ({6.0,2.0,0.0} 0)
{"initial": [6, 5], "goal": [6, 2], "length": 3, "path": [[6, 5], [6, 4], [6, 3], [6, 2]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 100.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(5.0, 1.0, 0.0) (4.0, 13.0, 0.0)
OK when reducing computePath(getPotential({5.0,1.0,0.0} 0, {4.0,1.3e+1,0.0} 0, {mtIL}, 8, 25, 33), {5,1}, {4,13}, stepSize, initialGradient(25, 8), 8, 25, 32) -> noPath
{"initial": [5, 1], "goal": [4, 13], "length": 0, "path": [], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 600.0, 550.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 900.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 950.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1050.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1100.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1150.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1200.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1250.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1300.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1350.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1400.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1450.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1500.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1550.0, 10000000000.0, 450.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1600.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 1650.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(4.0, 16.0, 0.0) (4.0, 15.0, 0.0)
OK when reducing computePath(getPotential({4.0,1.6e+1,0.0} 0, {4.0,1.5e+1,0.0} 0, {mtIL}, 8, 25, 33), {4,16}, {4,15}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({4.0,1.6e+1,0.0} 0) ({4.0,1.5e+1,0.0} 0)
{"initial": [4, 16], "goal": [4, 15], "length": 1, "path": [[4, 16], [4, 15]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
(6.0, 7.0, 0.0) (6.0, 22.0, 0.0)
OK when reducing computePath(getPotential({6.0,7.0,0.0} 0, {6.0,2.2e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,7}, {6,22}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,7.0,0.0} 0) ({6.0,8.0,0.0} 0) ({6.0,9.0,0.0} 0) ({6.0,1.0e+1,0.0} 0) ({6.0,1.1e+1,0.0} 0) ({6.0,1.2e+1,0.0} 0) ({6.0,1.3e+1,0.0} 0) ({6.0,1.4e+1,0.0} 0) ({6.0,1.5e+1,0.0} 0) ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0)
{"initial": [6, 7], "goal": [6, 22], "length": 15, "path": [[6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22]], "navfn}
(6.0, 16.0, 0.0) (1.0, 18.0, 0.0)
OK when reducing computePath(getPotential({6.0,1.6e+1,0.0} 0, {1.0,1.8e+1,0.0} 0, {mtIL}, 8, 25, 33), {6,16}, {1,18}, stepSize, initialGradient(25, 8), 8, 25, 32) -> ({6.0,1.6e+1,0.0} 0) ({6.0,1.7e+1,0.0} 0) ({6.0,1.8e+1,0.0} 0) ({6.0,1.9e+1,0.0} 0) ({6.0,2.0e+1,0.0} 0) ({6.0,2.1e+1,0.0} 0) ({6.0,2.2e+1,0.0} 0) ({5.0,2.3e+1,0.0} 0) ({4.0,2.3e+1,0.0} 0) ({3.0,2.3e+1,0.0} 0) ({2.0,2.3e+1,0.0} 0) ({1.0,2.2e+1,0.0} 0) ({1.0,2.1e+1,0.0} 0) ({1.0,2.0e+1,0.0} 0) ({1.0,1.9e+1,0.0} 0) ({1.0,1.8e+1,0.0} 0)
{"initial": [6, 16], "goal": [1, 18], "length": 15.82843, "path": [[6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [5, 23], [4, 23], [3, 23], [2, 23], [1, 22], [1, 21], [1, 20], [1, 19], [1, 18]], "navfn": [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 450.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 400.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 350.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 300.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 250.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 850.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 800.0, 10000000000.0, 10000000000.0, 0.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 750.0, 10000000000.0, 10000000000.0, 50.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 700.0, 10000000000.0, 10000000000.0, 100.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 650.0, 10000000000.0, 10000000000.0, 150.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 600.0, 10000000000.0, 10000000000.0, 200.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 550.0, 10000000000.0, 10000000000.0, 250.0, 300.0, 350.0, 400.0, 450.0, 500.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]}
